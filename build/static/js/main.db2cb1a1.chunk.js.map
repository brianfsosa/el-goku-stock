{"version":3,"sources":["components/formAdd.js","firebase.js","components/estantes.js","App.js","reportWebVitals.js","index.js"],"names":["FormAdd","props","initialStateValues","name","cantidad","ubication","useState","values","setValues","toast","useToast","handleImputChange","e","target","value","onSubmit","preventDefault","addOrEdit","tittle","description","status","duration","isClosable","position","id","placeholder","onChange","columns","spacing","h","inputMode","parseInt","mt","colorScheme","isLoading","isSubmitting","type","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","addTask","productObjet","a","collection","doc","set","Estante","data","setData","getProducts","onSnapshot","querySnapshot","docs","forEach","push","useEffect","editProduct","dataProduct","suma","update","removeProduct","resta","deleteProduct","window","confirm","delete","product","floor","productsToFilter","piso","filter","p","map","d","width","marginRight","size","paddingLeft","paddingRight","onClick","renderFloor","floorNumber","productToRender","productsToRender","as","variant","m","w","pToRender","render","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db2cb1a1.chunk.js","sourcesContent":["import { React, useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  NumberInput,\r\n  NumberInputField,\r\n  Button,\r\n  Select,\r\n  SimpleGrid,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction FormAdd(props) {\r\n  const initialStateValues = { name: \"\", cantidad: 1, ubication: 1 };\r\n  const [values, setValues] = useState(initialStateValues);\r\n  const toast = useToast();\r\n  const handleImputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addOrEdit(values);\r\n    setValues({ ...initialStateValues });\r\n\r\n    toast({\r\n      tittle: \"Producto Agregado\",\r\n      description: \"Producto Agregado\",\r\n      status: \"success\",\r\n      duration: 2000,\r\n      isClosable: true,\r\n      position: \"top\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <FormControl id=\"product\">\r\n            <FormLabel>Producto</FormLabel>\r\n            <Input\r\n              placeholder=\"Ej: Otro loco mÃ¡s\"\r\n              onChange={handleImputChange}\r\n              name=\"name\"\r\n              value={values.name}\r\n            />\r\n          </FormControl>\r\n          <SimpleGrid columns={2} spacing={10}>\r\n            <FormControl id=\"amount\" h={20}>\r\n              <FormLabel>Cantidad</FormLabel>\r\n              <NumberInput value={values.cantidad}>\r\n                <NumberInputField\r\n                  onChange={handleImputChange}\r\n                  name=\"cantidad\"\r\n                  value={values.cantidad}\r\n                  inputMode=\"numeric\"\r\n                />\r\n              </NumberInput>\r\n            </FormControl>\r\n            <FormControl id=\"ubication\" h={20}>\r\n              <FormLabel>Estante</FormLabel>\r\n              <Select\r\n                onChange={handleImputChange}\r\n                name=\"ubication\"\r\n                value={parseInt(values.ubication)}\r\n                inputMode=\"numeric\"\r\n              >\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n              </Select>\r\n            </FormControl>\r\n          </SimpleGrid>\r\n          <Button\r\n            mt={4}\r\n            colorScheme=\"teal\"\r\n            isLoading={props.isSubmitting}\r\n            type=\"submit\"\r\n          >\r\n            Agregar\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormAdd;\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBVp20C4IZ9q9RbAshqWDEhGncKTK7qc3o\",\r\n    authDomain: \"el-goku.firebaseapp.com\",\r\n    projectId: \"el-goku\",\r\n    storageBucket: \"el-goku.appspot.com\",\r\n    messagingSenderId: \"801736842699\",\r\n    appId: \"1:801736842699:web:3eea7bce160ee3943faa4e\"\r\n  };\r\n  // Initialize Firebase\r\n const fb = firebase.initializeApp(firebaseConfig);\r\n export const db = fb.firestore();\r\n","import {\r\n  Heading,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Button,\r\n  Input,\r\n  useToast,\r\n  Tag,Center\r\n} from \"@chakra-ui/react\";\r\nimport { React, useState, useEffect } from \"react\";\r\nimport FormAdd from \"./formAdd\";\r\nimport { db } from \"../firebase\";\r\n\r\nconst addTask = async (productObjet) => {\r\n  await db.collection(\"products\").doc().set(productObjet);\r\n};\r\n\r\nfunction Estante(props) {\r\n  const [data, setData] = useState([\r\n    /* {id:1, name:\"otro loco \", cantidad:14, ubication:1},{id:2, name:\"otro loco   \", cantidad:14, ubication:1},\r\n        {id:3, name:\"santa julia\", cantidad:14 , ubication:2},{id:4, name:\"santa julia\", cantidad:14 , ubication:2},{id:5, name:\"santa julia\", cantidad:14, ubication:2},\r\n        {id:6, name:\"otro loco \", cantidad:14, ubication:3},{id:7, name:\"otro loco\", cantidad:14, ubication:3},\r\n        {id:8, name:\"santa julia\", cantidad:14, ubication:4},{id:9, name:\"santa julia\", cantidad:14, ubication:4},{id:10, name:\"santa julia\", cantidad:14, ubication:4},\r\n        {id:13, name:\"otro loco \", cantidad:14, ubication:5},{id:14, name:\"otro \", cantidad:14, ubication:5},\r\n        {id:11, name:\"portillo\", cantidad:12, ubication:6},{id:12, name:\"santa julia\", cantidad:14, ubication:6} */\r\n  ]);\r\n  const toast = useToast();\r\n  const getProducts = async () => {\r\n    db.collection(\"products\").onSnapshot((querySnapshot) => {\r\n      const docs = [];\r\n      querySnapshot.forEach((doc) => {\r\n        docs.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setData(docs);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  function render(pToRender) {\r\n    const productsToRender = pToRender;\r\n    return (\r\n      <div>\r\n        {renderFloor(1, productsToRender)}\r\n        {renderFloor(2, productsToRender)}\r\n        {renderFloor(3, productsToRender)}\r\n        {renderFloor(4, productsToRender)}\r\n        {renderFloor(5, productsToRender)}\r\n        {renderFloor(6, productsToRender)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const editProduct = async (dataProduct) => {\r\n    const data = dataProduct;\r\n    const suma = parseInt(parseInt(data.cantidad) + 1);\r\n    await db.collection(\"products\").doc(data.id).update({ cantidad: suma });\r\n    toast({\r\n      tittle: data.name + \" +1\",\r\n      description: data.name + \" +1\",\r\n      status: \"info\",\r\n      duration: 2000,\r\n      isClosable: true,\r\n      position: \"top\",\r\n    });\r\n  };\r\n\r\n  const removeProduct = async (dataProduct) => {\r\n    const data = dataProduct;\r\n    const resta = parseInt(parseInt(data.cantidad) - 1);\r\n    await db.collection(\"products\").doc(data.id).update({ cantidad: resta });\r\n    toast({\r\n      tittle: data.name + \" -1\",\r\n      description: data.name + \" -1\",\r\n      status: \"warning\",\r\n      duration: 2000,\r\n      isClosable: true,\r\n      position: \"top\",\r\n    });\r\n  };\r\n\r\n  const deleteProduct = async (id) => {\r\n    if (window.confirm(\"Borrar Producto?\")) {\r\n      await db.collection(\"products\").doc(id).delete();\r\n      toast({\r\n        tittle: \"Producto Eliminado\",\r\n        description: \"Producto Eliminado\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n    }\r\n  };\r\n\r\n  function product(floor, productsToFilter) {\r\n    const productos = productsToFilter;\r\n    const piso = floor;\r\n    const products = productos.filter((p) => parseInt(p.ubication) === piso);\r\n\r\n    return products.map((d) => {\r\n      return (\r\n        <Tr key={d.id}>\r\n          \r\n            \r\n          <Td width='300px' marginRight='-10'>{d.name} <Tag size='sm'>{parseInt(d.cantidad)}</Tag>\r\n          </Td> \r\n          \r\n          <Td paddingLeft='5' paddingRight='5'>\r\n            <Center >\r\n          \r\n            <Button size=\"xs\" colorScheme=\"blue\" onClick={() => editProduct(d)} marginRight='1'>\r\n              +\r\n            </Button >\r\n            <Button marginRight='1'\r\n              size=\"xs\"\r\n              colorScheme=\"orange\"\r\n              onClick={() => removeProduct(d)}\r\n            >\r\n              -\r\n            </Button>\r\n            <Button\r\n              size=\"xs\"\r\n              colorScheme=\"red\"\r\n              onClick={() => deleteProduct(d.id)}\r\n            >\r\n              x\r\n            </Button> \r\n          \r\n          </Center>\r\n          </Td>\r\n          \r\n          \r\n        </Tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  function renderFloor(floorNumber, productToRender) {\r\n    const piso = floorNumber;\r\n    const productsToRender = productToRender;\r\n    return (\r\n      <div>\r\n        <br></br>\r\n        <Heading as=\"h3\" size=\"sm\">\r\n          <Tag colorScheme=\"blue\"> Estante {piso} </Tag>\r\n        </Heading>\r\n<br></br>\r\n        <Table variant=\"simple\" size=\"sm\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>PRODUCTO</Th>\r\n              <Th><Center >ACCIONES</Center ></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>{product(piso, productsToRender)}</Tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormAdd addOrEdit={addTask}></FormAdd>\r\n      <Input\r\n        placeholder=\"Buscar\"\r\n        size=\"sm\"\r\n        m=\"20px\"\r\n        w=\"300px\"\r\n        onChange={handleSearch}\r\n      />\r\n      {render(data)}\r\n    </div>\r\n  );\r\n}\r\nexport default Estante;\r\n","import { Heading,\n         \n          Box,\n        } from \"@chakra-ui/react\"\nimport { React } from 'react'                                                                                                                                                                                                               \nimport Estante from './components/estantes.js'\nimport { ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nfunction App() {\n\n\n\n  return (\n    <div className=\"App\">\n      <Box p=\"20px\">\n      <Heading as =\"h1\" size=\"xl\">El Goku</Heading>\n     \n        <Estante></Estante>\n\n      </Box>\n      \n        <ToastContainer></ToastContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport './firebase'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}